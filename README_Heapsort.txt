Heapsort merupakan teknik sorting yang mirip dengan selection sort, yaitu mencari terlebih dahulu nilai maksimum/minimum dari sebuah larik. Kemudian nilai tersebut akan ditaruh paling belakang dari urutan larik. Hal yang membedakan heapsort dengan selection sort adalah cara mencari nilai maksimum/minimumnya. Jika pada selection sort pencarian dilakukan dengan iterasi seluruh elemen larik, heapsort melakukan pencarian dengan membangun binary heap tree.

Binary heap tree adalah sebuah larik yang diperlakukan sebagai binary tree. Binary tree ini memiliki ciri semua node-nya harus lebih besar/kecil dari child-nya (tidak peduli child kiri atau child kanan). Pembangunan binary heap tree awalnya seperti membangun larik 1 dimensi biasa, hanya saja nantinya agar membentuk binary heap tree yang benar akan dilakukan pengecekan bottom-up (dari daun ke root). Jika yang diinginkan adalah maximum-heap tree (nilai root adalah yang terbesar) maka akan dilakukan pertukaran jika pada suatu node nilai salah satu childnya paling besar di antara child lainnya dan node parent-nya. Begitupun sebaliknya untuk minimum-heap tree.

Kompleksitas waktu untuk "membuat" binary heap tree dari larik 1 dimensi biasa adalah O(logn) dan kegiatan "membuat" binary heap tree ini dilakukan setiap dibutuhkan pencarian elemen maksimum/minimum. Sehingga jika ada n buah bilangan maka kompleksitas waktu total heapsort ini adalah O(n.logn). Hal ini menjadi salah satu keunggulan heapsort dimana selection sort membutuhkan kompleksitas waktu O(n^2) untuk melakukan sorting. Selain itu karena tempat dimana elemen disimpan tidak berubah-ubah (hanya dalam satu larik dan terus dipakai) maka space complexity heapsort adalah O(1). 

Tetapi ternyata algoritma ini cenderung kalah cepat dengan algoritma quicksort yang memiliki time complexity O(n^2). Mengapa ini bisa terjadi? Jawabannya antara lain adalah time complexity average case quicksort adalah O(n.logn) juga. Selain itu quicksort juga memanfaatkan cache-efficient karena pengerjaan sorting dibagi menjadi block-block kecil, berbeda dengan heapsort yang secara "brute" sorting dilakukan di block yang besar (larik utama).